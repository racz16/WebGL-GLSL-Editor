{
    "name": "webgl-glsl-editor",
    "displayName": "WebGL GLSL Editor",
    "icon": "res/png/icon.png",
    "description": "Language support for WebGL GLSL shaders.",
    "author": "Rácz Zalán",
    "publisher": "raczzalan",
    "repository": {
        "type": "git",
        "url": "https://github.com/racz16/WebGL-GLSL-Editor"
    },
    "bugs": {
        "email": "zalan.racz.dev@gmail.com",
        "url": "https://github.com/racz16/WebGL-GLSL-Editor/issues"
    },
    "license": "MIT",
    "keywords": [
        "GLSL",
        "shader",
        "WebGL",
        "OpenGL",
        "ES",
        "OpenGL Shading Language",
        "linters",
        "HTML"
    ],
    "galleryBanner": {
        "color": "#990000",
        "theme": "dark"
    },
    "version": "1.3.8",
    "engines": {
        "vscode": "^1.65.0"
    },
    "categories": [
        "Programming Languages",
        "Linters",
        "Snippets",
        "Formatters"
    ],
    "activationEvents": [
        "onLanguage:glsl",
        "onCommand:webgl-glsl-editor.opendocsgl",
        "onCommand:webgl-glsl-editor.opengles2",
        "onCommand:webgl-glsl-editor.opengles3",
        "onCommand:webgl-glsl-editor.generatepreprocessed"
    ],
    "main": "./dist/extension-desktop.js",
    "browser": "./dist/extension-web.js",
    "contributes": {
        "languages": [
            {
                "id": "glsl",
                "aliases": [
                    "GLSL",
                    "glsl"
                ],
                "extensions": [
                    ".glsl",
                    ".vert",
                    ".vs",
                    ".frag",
                    ".fs"
                ],
                "icon": {
                    "dark": "./res/svg/file-icon.svg",
                    "light": "./res/svg/file-icon.svg"
                },
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "glsl",
                "scopeName": "source.glsl",
                "path": "./syntaxes/glsl.language.json"
            },
            {
                "scopeName": "source.html.injected.glsl",
                "path": "./syntaxes/html-injected-glsl.language.json",
                "injectTo": [
                    "text.html"
                ]
            },
            {
                "scopeName": "source.js.injected.glsl",
                "path": "./syntaxes/js-injected-glsl.language.json",
                "injectTo": [
                    "source.js"
                ]
            },
            {
                "scopeName": "source.ts.injected.glsl",
                "path": "./syntaxes/ts-injected-glsl.language.json",
                "injectTo": [
                    "source.ts",
                    "source.tsx"
                ]
            }
        ],
        "snippets": [
            {
                "language": "glsl",
                "path": "./snippets.json"
            }
        ],
        "commands": [
            {
                "command": "webgl-glsl-editor.opendocsgl",
                "title": "Open docs.gl"
            },
            {
                "command": "webgl-glsl-editor.opengles2",
                "title": "Open official OpenGL ES 2.0 documentation"
            },
            {
                "command": "webgl-glsl-editor.opengles3",
                "title": "Open official OpenGL ES 3.0 documentation"
            },
            {
                "command": "webgl-glsl-editor.generatepreprocessed",
                "title": "Generate preprocessed GLSL source code",
                "enablement": "!isWeb && editorLangId == glsl && resourceExtname != .glsl && !editorReadonly && webgl-glsl-editor.canRunCompiler",
                "icon": "$(open-preview)"
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "command": "webgl-glsl-editor.generatepreprocessed",
                    "group": "navigation",
                    "when": "!isWeb && editorLangId == glsl && resourceExtname != .glsl && !editorReadonly && webgl-glsl-editor.canRunCompiler"
                }
            ]
        },
        "configuration": [
            {
                "title": "WebGL GLSL Editor",
                "properties": {
                    "webgl-glsl-editor.diagnostics": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enables/disables displaying errors, warnings and hints.",
                        "order": 1
                    },
                    "webgl-glsl-editor.strictRename": {
                        "type": "boolean",
                        "default": true,
                        "description": "Prevents invalid renames.",
                        "order": 2
                    },
                    "webgl-glsl-editor.alwaysOpenOnlineDoc": {
                        "type": "boolean",
                        "default": false,
                        "description": "Documentation is always opened online in the browser. This configuration only works with the desktop version.",
                        "order": 3
                    },
                    "webgl-glsl-editor.alwaysOpenOfflineDocInNewTab": {
                        "type": "boolean",
                        "default": false,
                        "description": "Offline documentation is always opened in a new tab. This configuration only works with the desktop version.",
                        "order": 4
                    },
                    "webgl-glsl-editor.format.placeBracesOnSeparateLine": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places the braces (`{`, `}`) on separate lines.\n\n**Enabled:**\n```glsl\nif(valid)\n{\n\treturn 1;\n}\n```\n**Disabled:**\n```glsl\nif(valid) {\n\treturn 1;\n}\n```",
                        "order": 5
                    },
                    "webgl-glsl-editor.format.placeSpaceAroundUnaryOperators": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space between the unary operators (`+`, `-`, `++`, `--`, `!`, `~`) and the operands.\n\n**Enabled:**\n```glsl\nint i = - 1;\n```\n**Disabled:**\n```glsl\nint i = -1;\n```",
                        "order": 6
                    },
                    "webgl-glsl-editor.format.placeSpacesAroundBinaryOperators": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places spaces around the binary operators (`+`, `-`, `*`, `/`, `%`, `<`, `<=`, `==`, `!=`, `>=`, `>`, `<<`, `>>`, `&&`, `||`, `^^`, `&`, `|`, `^`).\n\n**Enabled:**\n```glsl\nint i = index + 1;\n```\n**Disabled:**\n```glsl\nint i = index+1;\n```",
                        "order": 7
                    },
                    "webgl-glsl-editor.format.placeSpacesAroundAssignmentOperators": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places spaces around the assignment operators (`=`, `+=`, `-=`, `*=`, `/=`, `%=`, `<<=`, `>>=`, `&=`, `|=`, `^=`).\n\n**Enabled:**\n```glsl\nint i = 1;\n```\n**Disabled:**\n```glsl\nint i=1;\n```",
                        "order": 8
                    },
                    "webgl-glsl-editor.format.placeSpacesAroundTernaryOperators": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places spaces around the ternary operators (`?`, `:`).\n\n**Enabled:**\n```glsl\nreturn valid ? 1 : -1;\n```\n**Disabled:**\n```glsl\nreturn valid?1:-1;\n```",
                        "order": 9
                    },
                    "webgl-glsl-editor.format.placeSpaceAfterKeywords": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space between keywords (`if`, `for`, `while`, `switch`, `layout`) and the opening parentheses (`(`).\n\n**Enabled:**\n```glsl\nif (valid) {\n\treturn 1;\n}\n```\n**Disabled:**\n```glsl\nif(valid) {\n\treturn 1;\n}\n```",
                        "order": 10
                    },
                    "webgl-glsl-editor.format.placeSpaceAfterFunctionNames": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space between function names and the opening parentheses (`(`).\n\n**Enabled:**\n```glsl\nfloat compute () {\n\treturn compute (1);\n}\n```\n**Disabled:**\n```glsl\nfloat compute() {\n\treturn compute(1);\n}\n```",
                        "order": 11
                    },
                    "webgl-glsl-editor.format.placeSpaceBeforeCommas": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space before commas (`,`).\n\n**Enabled:**\n```glsl\ncompute(1 , true);\n```\n**Disabled:**\n```glsl\ncompute(1, true);\n```",
                        "order": 12
                    },
                    "webgl-glsl-editor.format.placeSpaceAfterCommas": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places a space after commas (`,`).\n\n**Enabled:**\n```glsl\ncompute(1, true);\n```\n**Disabled:**\n```glsl\ncompute(1,true);\n```",
                        "order": 13
                    },
                    "webgl-glsl-editor.format.placeSpacesAroundDots": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places spaces around dots (`.`).\n\n**Enabled:**\n```glsl\nvec2 uv = position . xy;\n```\n**Disabled:**\n```glsl\nvec2 uv = position.xy;\n```",
                        "order": 14
                    },
                    "webgl-glsl-editor.format.placeSpaceBeforeCaseColons": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space before colons (`:`) in `case`s and `default`s.\n\n**Enabled:**\n```glsl\nswitch(type) {\n\tcase 0 :\n\t\treturn -1;\n\tdefault :\n\t\treturn type;\n}\n```\n**Disabled:**\n```glsl\nswitch(type) {\n\tcase 0:\n\t\treturn -1;\n\tdefault:\n\t\treturn type;\n}\n```",
                        "order": 15
                    },
                    "webgl-glsl-editor.format.placeSpaceBeforeSemicolonsInFor": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space before semicolons (`;`) in `for`s.\n\n**Enabled:**\n```glsl\nfor(int i = 0 ; i < array.length() ; i++) {\n\tresult += array[i];\n}\n```\n**Disabled:**\n```glsl\nfor(int i = 0; i < array.length(); i++) {\n\tresult += array[i];\n}\n```",
                        "order": 16
                    },
                    "webgl-glsl-editor.format.placeSpaceAfterSemicolonsInFor": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places a space after semicolons (`;`) in `for`s.\n\n**Enabled:**\n```glsl\nfor(int i = 0; i < array.length(); i++) {\n\tresult += array[i];\n}\n```\n**Disabled:**\n```glsl\nfor(int i = 0;i < array.length();i++) {\n\tresult += array[i];\n}\n```",
                        "order": 17
                    },
                    "webgl-glsl-editor.format.placeSpacesInsideParentheses": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places spaces inside parentheses (`(`, `)`).\n\n**Enabled:**\n```glsl\ncompute( 1, true );\n```\n**Disabled:**\n```glsl\ncompute(1, true);\n```",
                        "order": 18
                    },
                    "webgl-glsl-editor.format.placeSpacesAroundBraces": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Places spaces around braces (`{`, `}`).\n\n**Enabled:**\n```glsl\nif(valid) {\n\treturn 1;\n}\n```\n**Disabled:**\n```glsl\nif(valid){\n\treturn 1;\n}\n```",
                        "order": 19
                    },
                    "webgl-glsl-editor.format.placeSpaceBeforeOpeningBrackets": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places a space before opening brackets (`[`).\n\n**Enabled:**\n```glsl\nint [6] indices;\n```\n**Disabled:**\n```glsl\nint[6] indices;\n```",
                        "order": 20
                    },
                    "webgl-glsl-editor.format.placeSpacesInsideBrackets": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Places spaces inside brackets (`[`, `]`).\n\n**Enabled:**\n```glsl\nint[ 6 ] indices;\n```\n**Disabled:**\n```glsl\nint[6] indices;\n```",
                        "order": 21
                    },
                    "webgl-glsl-editor.format.favorFloatingSuffix": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "The formatter and the color picker favor the floating suffix (`f`) when applicable.\n\n**Enabled**\n```glsl\nfloat value = 1.0f;\n```\n**Disabled:**\n```glsl\nfloat value = 1.0;\n```",
                        "order": 22
                    },
                    "webgl-glsl-editor.codeInjection": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enables/disables code injection.",
                        "order": 23
                    },
                    "webgl-glsl-editor.codeInjectionSource": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "#version 300 es",
                            "precision highp float;",
                            "uniform vec3 iResolution;",
                            "uniform float iTime;",
                            "uniform float iTimeDelta;",
                            "uniform int iFrame;",
                            "uniform float iChannelTime[4];",
                            "uniform vec3 iChannelResolution[4];",
                            "uniform vec4 iMouse;",
                            "uniform sampler2D iChannel0;",
                            "uniform sampler2D iChannel1;",
                            "uniform sampler2D iChannel2;",
                            "uniform sampler2D iChannel3;",
                            "uniform vec4 iDate;",
                            "uniform float iSampleRate;"
                        ],
                        "description": "The lines of the injected source code. Only works if Code Injection is enabled.",
                        "order": 24
                    }
                }
            }
        ]
    },
    "scripts": {
        "build-production": "webpack --mode production",
        "build": "webpack",
        "watch": "webpack --watch",
        "compile-antlr-windows": "@powershell -NoProfile -ExecutionPolicy Unrestricted -Command ./compile-antlr.ps1",
        "compile-antlr-linux": "./compile-antlr.sh",
        "markdownlint": "markdownlint --ignore node_modules **/*.md",
        "prettier-lint": "prettier --check .",
        "prettier-format": "prettier --write .",
        "eslint": "eslint ./src --ext .ts --ignore-pattern src/_generated",
        "run-in-browser": "vscode-test-web --extensionDevelopmentPath=. .",
        "package-universal": "vsce package --ignoreFile vscodeignore/universal.vscodeignore",
        "package-web": "vsce package --target web --ignoreFile vscodeignore/web.vscodeignore",
        "package-windows-x64": "vsce package --target win32-x64 --ignoreFile vscodeignore/windows.vscodeignore",
        "package-mac-x64": "vsce package --target darwin-x64 --ignoreFile vscodeignore/mac.vscodeignore",
        "package-linux-x64": "vsce package --target linux-x64 --ignoreFile vscodeignore/linux.vscodeignore",
        "package-all": "start npm run package-universal && start npm run package-web && start npm run package-windows-x64 && start npm run package-mac-x64 && start npm run package-linux-x64",
        "prepare": "husky install"
    },
    "devDependencies": {
        "@types/node": "^20.11.26",
        "@types/vscode": "1.65.0",
        "@typescript-eslint/eslint-plugin": "^7.2.0",
        "@typescript-eslint/parser": "^7.2.0",
        "@vscode/test-web": "^0.0.52",
        "@vscode/vsce": "^2.24.0",
        "antlr4ts-cli": "^0.5.0-alpha.4",
        "assert": "^2.1.0",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "husky": "^9.0.11",
        "lint-staged": "^15.2.2",
        "markdownlint-cli": "^0.39.0",
        "prettier": "^3.2.5",
        "prettier-plugin-organize-imports": "^3.2.4",
        "process": "^0.11.10",
        "ts-loader": "^9.5.1",
        "typescript": "^5.4.2",
        "webpack": "^5.90.3",
        "webpack-cli": "^5.1.4"
    },
    "dependencies": {
        "antlr4ts": "^0.5.0-alpha.4"
    },
    "lint-staged": {
        "*": "prettier --write --ignore-unknown"
    }
}
